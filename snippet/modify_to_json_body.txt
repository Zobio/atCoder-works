vector<long long> dijkstra(ll s, vvpll g) { 
	/*
	sからスタートして(到達可能な)全点における最短距離を求める
	グラフg firstに頂点番号 secondにコスト
	*/
	vector<ll> dis(g.size(), INF);
	dis[s] = 0;
	priority_queue<pair<ll, ll>, vector<pair<ll, ll>>, greater<pair<ll, ll>>> que;
	//disを更新するためのqueue first:コスト second:頂点番号 (コストが低い順に処理)
	que.push({0, s});
	while(!que.empty()) {
		pair<ll, ll> p = que.top(); que.pop();
		ll v = p.second, cost = p.first;
		if(dis[v] < cost) continue;
		rep(i, g[v].size()) {
			pair<ll, ll> e = g[v][i]; //e.first:頂点番号 e.second:コスト
			if(dis[e.first] > dis[v] + e.second) {
				dis[e.first] = dis[v] + e.second;
				que.push({dis[e.first], e.first});
			}
		}
	}
	return dis;
}