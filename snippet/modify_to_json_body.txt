template<typename T>
vector<T> osa_k(T num) {
	/*
	1からnumについて、エラトステネスの篩を用いる。
	その際、配列retを生成する。
	ret[i] : iをふるい落とした最小の素数
	rey[i] == -1のときは、iは素数
	計算量はO(NloglogN)
	これを用いて、1からnumについてO(NlogN)で素因数の列挙ができる。(愚直な試し割りだとO(N√N))
	*/
	vector<T> ret(num + 1, -1); //ret[i] : その数をふるい落とした最小の素数
	for(T i = 2; i <= num; i++) {
		if(ret[i] != -1) continue; //すでにふるい落とされている(=素数でない)
		for(T j = i * 2; j <= num; j += i) {
			if(ret[j] == -1) ret[j] = i;
		}
	}
	return ret;
}